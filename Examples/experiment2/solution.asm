	
	.ORIG	x3000

;
;INITIALISATION
;
INIT	LD	R3, FIRST	;R3 IS ADDRESS OF POINTER TO FIRST NODE
	LDR	R3, R3, #0	;R3 NOW POINTS TO THE FIRST NODE
	LEA	R0, PROMPT	;
	PUTS			;

;
;GET INPUT FROM USER
;
	LEA	R1, SPACE	;SAVES THE ADDRESS OF THE STORAGE MEMORY BLOCK
LOOP	GETC			;INPUT CHARACTER -> R0
	OUT			;PRINT TO SCREEN
	STR	R0, R1, #0	;R0 -> MEMORY ADDRESS STORED IN R1 + 0
	ADD	R1, R1, #1	;POINTS TO NEXT AVAILABLE BLOCK
	ADD	R0, R0, #-10	;R0 = R0 - /n
	BRnp	LOOP		;
	ADD	R1, R1, #-1	;PREVIOUS MEMORY LOCATION
	STR	R0, R1, #0	;R0 -> R1(WHICH IS X0000)
	LEA	R0, SPACE	;INIT R0 BACK TO ORIGINAL

;
;ALGORITHM TO COMPARE 2 STRINGS GIVEN ONLY ADDRESS OF STRINGS
;
COMPARE	ADD	R3, R3, #0	;
	BRz	FALSE		;CHECKS IF NULL
	ADD	R3, R3, #1	;GO TO NEXT MEMORY
				;R0 = ADDRESS S1
				;R3 = ADDRESS OF POINTER S2
	LDR	R2, R3, #0	;R0, R2 = ADDRESS OF S1, S2
	LEA	R0, SPACE	;RESET R0
LOOP2	NOT	R4, R0		;
	NOT	R4, R4		;
	NOT	R5, R2		;
	NOT	R5, R5		;DUPLICATION OF VALUES: R4 = S1; R5 = S2
	LDR	R5, R5, #0	;
	LDR	R4, R4, #0	;
	ADD	R1, R4, R5	;
	BRz	TRUE		;THIS IS THE ROOM!
	NOT	R5, R5		;NEGATE R5
	ADD	R5, R5, #1	;MAKE R5 NEGATIVE
	ADD	R0, R0, #1	;
	ADD	R2, R2, #1	;NEXT ADDRESSES R0, R2
	ADD	R5, R5, R4	;
	BRz	LOOP2		;CHECK NEXT CHARACTER
	BRnzp	NNODE		;CHECK NEXT NODE

;
;GO TO NEXT NODE
;
NNODE	ADD	R3, R3, #-1	;GO BACK TO HEAD OF NODE
	LDR	R3, R3, #0	;R3 POINTS TO NEXT NODE
	BRnzp	COMPARE		;

;
;THERE IS NO MATCH!
;
FALSE	LEA	R0, NONE	;
	PUTS			;PRINT TO SCREEN
	BRnzp	END		;

;
;THERE IS A MATCH!
;
TRUE	ADD	R3, R3, #1	;
	LDR	R0, R3, #0	;
	PUTS			;PRINT CORRECT NAME
	BRnzp	END		;

;
;HALT THE MACHINE
;
END	HALT			;STOP THE MACHINE

;
;PSEUDO-OPS
;
PROMPT	.STRINGZ "Type a room number and press Enter: "
NONE	.STRINGZ "No Entry"
SPACE	.BLKW	10
FIRST	.FILL	X3300

	.END